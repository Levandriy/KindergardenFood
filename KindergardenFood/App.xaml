<Application x:Class="KindergardenFood.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:KindergardenFood"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="SelectedBrush" Color="Purple"/>
        <SolidColorBrush x:Key="MouseOverBrush" Color="#FFA768CC"/>
        <SolidColorBrush x:Key="AltColorDG" Color="#FFECB0FF"/>
        <ControlTemplate x:Key="DefaultTemplateOfButton" TargetType="{x:Type ButtonBase}">
            <Border BorderThickness="0"
                BorderBrush="{TemplateBinding BorderBrush}"
                Background="{TemplateBinding Background}"
                Name="border"
                SnapsToDevicePixels="True">
                <ContentPresenter RecognizesAccessKey="True"
                                Content="{TemplateBinding ContentControl.Content}"
                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                Name="contentPresenter"
                                Margin="{TemplateBinding Control.Padding}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                Focusable="False" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="Panel.Background" TargetName="border" Value="Transparent"/>

                    <Setter Property="Border.BorderBrush" TargetName="border" Value="White"/>
                </Trigger>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="border" Value="{StaticResource MouseOverBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource MouseOverBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="border" Value="White"/>
                </Trigger>
                <Trigger Property="ButtonBase.IsPressed" Value="True">
                    <Setter Property="Panel.Background" TargetName="border" Value="{StaticResource MouseOverBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource MouseOverBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="border" Value="Transparent"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="border" Value="{StaticResource SelectedBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource SelectedBrush}"/>

                    <Setter Property="Border.BorderBrush" TargetName="border" Value="Transparent"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="border" Value="Transparent"/>
                    <Setter Property="Border.BorderBrush" TargetName="border" Value="Transparent"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource MouseOverBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="HeaderButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="Constania"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="10,0,10,0"/>
            <Setter Property="Template" Value="{StaticResource DefaultTemplateOfButton}"/>
        </Style>
        <Style x:Key="ToolsButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template" Value="{StaticResource DefaultTemplateOfButton}"/>
            <Setter Property="Width" Value="60"/>
            <Setter Property="Height" Value="60"/>
        </Style>
        <Style x:Key="ReportsButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="15"/>
            <Setter Property="Template" Value="{StaticResource DefaultTemplateOfButton}"/>
        </Style>
        <Style x:Key="Rounded" TargetType="{x:Type Border}">
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Padding" Value="4"/>
        </Style>
        <Style x:Key="RoundedShadow" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="CornerRadius" Value="15"/>
            <Setter Property="Background" Value="White"/>
        </Style>
        <Style x:Key="ShadowBorder" TargetType="{x:Type Border}">
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Background" Value="{StaticResource MouseOverBrush}"/>
            <Style.Triggers>
                <Trigger Property="Border.IsMouseOver" Value="true">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="Black" Opacity="0.3"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TextBoxAddEdit" TargetType="{x:Type TextBox}">
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="15"/>
                </Style>
            </Style.Resources>
            <Setter Property="Padding" Value="15,5,10,5"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="TextBoxSearch" TargetType="{x:Type TextBox}">
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="10"/>
                </Style>
            </Style.Resources>
            <Setter Property="Padding" Value="15,5,5,5"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type DatePicker}">
            <Style.Resources>
                <Style TargetType="{x:Type DatePickerTextBox}">
                    <Style.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="6"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="Background" Value="Transparent"/>
                        </Style>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Padding" Value="5,2,2,2"/>
                            <Setter Property="TextAlignment" Value="Center"/>
                        </Style>
                    </Style.Resources>
                    <Setter Property="Margin" Value="2"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="FontSize" Value="14"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="IsReadOnly" Value="True"/>
                </Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="12"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Padding" Value="2"/>
                </Style>
            </Style.Resources>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <TextBox Name="PART_EditableTextBox"
                                     Style="{StaticResource TextBoxAddEdit}"
                                     Height="{TemplateBinding Height}"/>
                            <ToggleButton Margin="5,1,5,1"
                                          Height="{TemplateBinding Height}"
                                          Width="15"
                                          Background="Transparent"
                                          BorderBrush="Transparent"
                                          BorderThickness="0"
                                          Focusable="False"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Center"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press">
                                <Path HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Data="M 0 0 L 4 4 L 8 0 Z"
                                                Fill="{StaticResource SelectedBrush}"/>
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              Margin="10,0,0,0"/>
                            <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True" 
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"                
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                            BorderThickness="1"
                                            CornerRadius="5"
                                            Background="White"
                                            BorderBrush="Black"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="IsEditable" Value="True"/>
            <Setter Property="IsTextSearchEnabled" Value="True"/>
            <Setter Property="Margin" Value="10"/>
        </Style>
        <Style x:Key="AddEditButton" TargetType="{x:Type Button}">
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="15"/>
                </Style>
            </Style.Resources>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Content" Value="Добавить/изменить"/>
        </Style>
        <Style x:Key="HeaderBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="Padding" Value="10"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Constania"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="TextAlignment" Value="Left"/>
        </Style>
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="AlternationCount" Value="2"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
            <Setter Property="HorizontalGridLinesBrush" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="{StaticResource SelectedBrush}"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="Padding" Value="10"/>
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="FontFamily" Value="Constania"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Padding" Value="3"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="FontFamily" Value="Constania"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="AlternationIndex" Value="0"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="#FFC7C7C7"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="AlternationIndex" Value="1"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="Transparent"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{StaticResource MouseOverBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Margin" Value="10,5,10,5"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Transparent"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
